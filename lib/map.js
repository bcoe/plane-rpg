if (typeof foundima == 'undefined') {
  foundima = {};
}

(function() {
  function Map(opts) {
    _.extend(this, {
      console: null,
      player: null,
      world: null,
      tiles: [foundima.Ground, foundima.Road, foundima.Walk, foundima.Wall],
      npcs: [],
      map: [],
      rawMap: [
        ['03', '02', '01', '01', '01', '02', '00', '00', '00', '00', '00', '00', '00', '00', '00', '03', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00'],
        ['03', '02', '01', '01', '01', '02', '03', '03', '03', '03', '03', '00', '00', '00', '00', '03', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00'],
        ['03', '02', '01', '01', '01', '02', '03', '00', '00', '00', '03', '00', '00', '00', '00', '03', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00'],
        ['03', '02', '01', '01', '01', '02', '03', '00', '00', '00', '03', '00', '00', '00', '00', '03', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00'],
        ['03', '02', '01', '01', '01', '02', '03', '00', '00', '03', '03', '00', '00', '00', '00', '03', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00'],
        ['03', '02', '01', '01', '01', '02', '00', '00', '00', '00', '03', '00', '00', '00', '00', '03', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00'],
        ['03', '02', '01', '01', '01', '02', '03', '00', '00', '00', '03', '00', '00', '00', '00', '03', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00'],
        ['03', '02', '01', '01', '01', '02', '03', '00', '00', '00', '03', '00', '00', '00', '00', '03', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00'],
        ['03', '02', '01', '01', '01', '02', '03', '00', '00', '00', '03', '00', '00', '00', '00', '03', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00'],
        ['03', '02', '01', '01', '01', '02', '03', '03', '03', '03', '03', '00', '00', '00', '00', '03', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00'],
        ['03', '02', '01', '01', '01', '02', '00', '00', '00', '00', '00', '00', '00', '00', '00', '03', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00'],
        ['03', '02', '01', '01', '01', '02', '00', '00', '00', '00', '00', '00', '00', '00', '00', '03', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00'],
        ['03', '02', '01', '01', '01', '02', '03', '03', '03', '03', '03', '03', '03', '03', '00', '03', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00'],
        ['03', '02', '01', '01', '01', '02', '03', '00', '00', '00', '00', '03', '00', '03', '00', '03', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00'],
        ['03', '02', '01', '01', '01', '02', '03', '00', '00', '00', '00', '03', '00', '03', '00', '03', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00'],
        ['03', '02', '01', '01', '01', '02', '03', '00', '00', '00', '00', '03', '00', '03', '00', '03', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00'],
        ['03', '02', '01', '01', '01', '02', '03', '00', '00', '00', '00', '00', '00', '03', '00', '03', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00'],
        ['03', '02', '01', '01', '01', '02', '03', '00', '00', '00', '00', '03', '00', '03', '00', '03', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00'],
        ['03', '02', '01', '01', '01', '02', '00', '00', '00', '00', '00', '03', '03', '03', '00', '03', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00'],
        ['03', '02', '01', '01', '01', '02', '03', '00', '00', '00', '00', '03', '00', '03', '00', '03', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00'],
        ['03', '02', '01', '01', '01', '02', '03', '00', '00', '00', '00', '03', '00', '03', '00', '03', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00'],
        ['03', '02', '01', '01', '01', '02', '03', '00', '00', '00', '00', '03', '00', '03', '00', '03', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00'],
        ['03', '02', '01', '01', '01', '02', '03', '00', '00', '00', '00', '03', '00', '03', '00', '03', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00'],
        ['03', '02', '01', '01', '01', '02', '03', '00', '00', '00', '00', '03', '00', '03', '00', '03', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00'],
        ['03', '02', '01', '01', '01', '02', '03', '00', '00', '00', '00', '03', '00', '03', '00', '03', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00'],
        ['03', '02', '01', '01', '01', '02', '03', '00', '00', '00', '00', '03', '00', '03', '00', '03', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00'],
        ['03', '02', '01', '01', '01', '02', '03', '03', '03', '03', '03', '03', '03', '03', '00', '03', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00'],
        ['03', '02', '01', '01', '01', '02', '03', '00', '00', '03', '00', '00', '00', '00', '00', '03', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00'],
        ['03', '02', '01', '01', '01', '02', '03', '00', '00', '03', '00', '00', '00', '00', '00', '03', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00'],
        ['03', '02', '01', '01', '01', '02', '00', '00', '00', '03', '00', '00', '00', '00', '00', '03', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00'],
        ['03', '02', '01', '01', '01', '02', '03', '00', '03', '03', '00', '00', '00', '00', '00', '03', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00'],
        ['03', '02', '01', '01', '01', '02', '03', '03', '03', '03', '03', '03', '03', '03', '00', '03', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00'],
        ['03', '02', '01', '01', '01', '02', '00', '00', '03', '00', '00', '00', '00', '03', '00', '03', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00'],
        ['03', '02', '01', '01', '01', '02', '00', '03', '03', '00', '00', '00', '00', '03', '00', '03', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00'],
        ['03', '02', '01', '01', '01', '02', '00', '03', '00', '00', '00', '00', '00', '03', '00', '03', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00'],
        ['03', '02', '01', '01', '01', '02', '00', '00', '00', '00', '00', '03', '00', '03', '00', '03', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00'],
        ['03', '02', '01', '01', '01', '02', '00', '03', '00', '00', '00', '00', '00', '03', '00', '03', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00'],
        ['03', '02', '01', '01', '01', '02', '00', '03', '03', '03', '03', '03', '03', '03', '00', '03', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00', '00']]
    }, opts);

    this.createTiles();
    this.createNPCs();
  }

  Map.prototype.getTile = function(x, y) {
    var row = this.map[y];
    return row[x];
  };

  Map.prototype.createNPCs = function() {
    var _this = this;

    var phil = new foundima.NPC({
      console: this.console,
      player: this.player,
      name: 'Phil',
      x: 9,
      y: 4,
      greetings: ["Hey, I'm Phil. Welcome to Mission Bicycle", "What can I do you for?", "We're a startup that makes custom bikes", "have you visted our online store?", "Want to buy a Chrome bag?", "Want to buy a silly hat?"],
      actions: {
        buy: function(_this, value) {
          if (value == 'chrome bag') {
            var price = 20;
            if (_this.player.money >= price) {
              _this.player.money -= price;
              _this.player.giveItem('chrome bag');
            } else {
              _this.say("That'll be $" + price + ". I'm afraid you don't have enough scratch")
            }
          } else if (value == 'silly hat') {
            var price = 5;
            if (_this.player.money >= price) {
              _this.player.money -= price;
              _this.player.giveItem('silly hat');
            } else {
              _this.say("That'll be $" + price + ". I'm afraid you don't have enough scratch")
            }            
          } else {
            _this.say("I can't sell you that, man.")
          }
        }
      }
    });

    var sally = new foundima.NPC({
      console: this.console,
      player: this.player,
      x: 12,
      y: 18,
      pulled: 0,
      name: 'Sally',
      greetings: ["Hey, I'm Sally, welcome to Four Barrel", "What can I do you for?", "Want to make some money? pull some expresso for us?"],
      actions: {
        pull: function(_this, value) {
          _this.pulled += 1;
          _this.console.message("You've pulled " + _this.pulled + ' expressos.');
          _this.player.money += 1;
          _this.console.message("You've received $1 for pulling expressos. You now have $" + _this.player.money);
        }
      }
    });

    var bill = new foundima.NPC({
      console: this.console,
      player: this.player,
      name: 'Bill',
      x: 8,
      y: 30,
      pulled: 0,
      greetings: ["Welcome to 640 Valencia. A shared Cafe and work space.", "Want to work here?", "A lot of good startups work here, want to work here?"],
      actions: {
        work: function(_this, value) {
          if (_this.player.inventory.indexOf('silly hat') > -1 && _this.player.inventory.indexOf('chrome bag') > -1) {
            _this.console.message('You work out of the shared space and have a brilliant startup idea! You put together a splash page, and pitch deck outlining it.');
            setTimeout(function() {
              _this.player.giveItem('idea');
            }, 2000);
          } else {
            var message = "where's your ironic hat?";
            if (_this.player.inventory.indexOf('silly hat') > -1) {
              message = "your bag looks ridiculous."
            }
            _this.say("You can't work here looking like that! " + message);
          }
        }
      }
    });

    var dan = new foundima.NPC({
      console: this.console,
      player: this.player,
      x: 11,
      y: 35,
      pulled: 0,
      name: "Dan",
      greetings: ["Hey, I'm Dan Welcome to my VC firm!", "Have any good ideas to give me?", "Have any good ideas yet?"],
      actions: {
        give: function(_this, value) {

          if (value != 'idea') {
            _this.say("I don't want that");
            return;
          }

          if (_this.player.inventory.indexOf('idea') > -1) {
            _this.say("I love this idea! and this splash page looks awesome!");
            setTimeout(function() {
              _this.player.giveItem('VC funding');
            }, 1000);
            setTimeout(function() {
              _this.console.message('You receive VC funding, finish your splash page, and become a dot-com billionaire you win!!!')
            }, 2000);
          } else {
            _this.say("Doesn't look like you have any worthwhile ideas")
          }
        }
      }
    });

    this.npcs.push(phil);
    this.npcs.push(sally);
    this.npcs.push(bill);
    this.npcs.push(dan);
  };

  Map.prototype.findCloseNPCs = function() {
    var _this = this,
      sx = Math.max(0, this.player.x - 1),
      sy = Math.max(0, this.player.y - 1),
      ex = Math.min(this.player.x + 1, this.width() - 1),
      ey = Math.min(this.player.y + 1, this.height() - 1),
      npcs = [];


    this.npcs.forEach(function(npc) {
      // find close NPCs.
      if (npc.x >= sx && npc.x <= ex && npc.y >= sy && npc.y <= ey) {
        npcs.push(npc);
      }
    });

    return npcs;
  };

  Map.prototype.handleAction = function(action) {
    this.findCloseNPCs().forEach(function(npc) {
      npc.handleAction(action);
    });
  };

  Map.prototype.createTiles = function() {
    for (var y = 0; y < this.rawMap.length; y++) {
      var row = [];
      for (var x = 0; x < this.rawMap[0].length; x++) {
        var tileIndex = parseInt(this.rawMap[y][x]);
        row.push(
          new this.tiles[tileIndex]({
            world: this.world,
            x: x,
            y: y
          }) 
        );
      }
      this.map.push(row);
    }
  };

  Map.prototype.width = function() {
    return this.rawMap[0].length;
  };

  Map.prototype.height = function() {
    return this.rawMap.length;
  };

  Map.prototype.render = function() {
    var sx = Math.max(0, this.player.x - 10),
      sy = Math.max(0, this.player.y - 5);

    $('#world').scrollLeft(sx * 32);
    $('#world').scrollTop(sy * 48);
  };

  foundima.Map = Map;
})();